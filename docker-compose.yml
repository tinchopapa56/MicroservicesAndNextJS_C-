services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      # - pgdata:/var/lib/postresql/data
      - /var/lib/postresql/data
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
    ports:
      - 27017:27017
    volumes:
      # - mongodata:/var/lib/mongodb/data
      - /var/lib/mongodb/data
  rabbitmq: 
    image: rabbitmq:3-management-alpine
    ports: 
      - 5672:5672
      - 15672:15672
  auction-svc: 
    image: microservices/auction-svc:latest
    build: 
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=auctions
      # - IdentityServiceUrl=http://identity-svc
      - IdentityServiceUrl=http://localhost:5000
    ports:
      - 7001:80
    depends_on:
      - postgres
      - rabbitmq
  search-svc: 
    image: microservices/search-svc:latest
    build: 
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://mongo:mongo@mongodb
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq
  gateway-svc: 
    image: microservices/gateway-svc:latest
    build: 
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
  # identity-svc:
  #   image: microservices/identity-svc:latest
  #   build: 
  #     context: .
  #     dockerfile: src/IdentityService/Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     # - ASPNETCORE_ENVIRONMENT=Docker
  #     - ASPNETCORE_URLS=http://+:80
  #     - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgres;Database=identity
  #   ports:
  #     - 5000:80
  #   depends_on:
  #     - postgres
volumes:
  pgdata: 
  mongodata: 